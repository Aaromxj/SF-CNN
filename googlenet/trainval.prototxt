name: "GoogleNet"
layer {
  name: "data"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    mirror: true
    #mean_file: "examples/NWPU-RESISC45/mean.binaryproto"
    #mean_file: "examples/AID/largesize/mean.binaryproto"
    mean_file: "examples/UC/mean.binaryproto"
  }
  data_param {
    #source: "examples/NWPU-RESISC45/img_train_lmdb"
    #source: "examples/AID/largesize/img_train_lmdb"
    source: "examples/UC/img_train_lmdb"
    batch_size: 128
    backend: LMDB
  }
}

layer {
  name: "data"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    mirror: false
    #mean_file: "examples/NWPU-RESISC45/mean.binaryproto"
    #mean_file: "examples/AID/largesize/mean.binaryproto"
    mean_file: "examples/UC/mean.binaryproto"
  }
  data_param {
    #source: "examples/NWPU-RESISC45/img_test_lmdb"
    #source: "examples/AID/largesize/img_test_lmdb"
    source: "examples/UC/img_test_lmdb"
    batch_size: 210
    backend: LMDB
  }
}
layer {
  name: "conv1/7x7_s2"
  type: "Convolution"
  bottom: "data"
  top: "conv1/7x7_s2"
  param {
    lr_mult: 0.001
  }
  param {
    lr_mult: 0.001
  }
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    stride: 2
  }
}
layer {
  name: "conv1/relu_7x7"
  type: "ReLU"
  bottom: "conv1/7x7_s2"
  top: "conv1/7x7_s2"
}
layer {
  name: "pool1/3x3_s2"
  type: "Pooling"
  bottom: "conv1/7x7_s2"
  top: "pool1/3x3_s2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "pool1/norm1"
  type: "LRN"
  bottom: "pool1/3x3_s2"
  top: "pool1/norm1"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "conv2/3x3_reduce"
  type: "Convolution"
  bottom: "pool1/norm1"
  top: "conv2/3x3_reduce"
  param {
    lr_mult: 0.001
  }
  param {
    lr_mult: 0.001
  }
  convolution_param {
    num_output: 64
    kernel_size: 1
  }
}
layer {
  name: "conv2/relu_3x3_reduce"
  type: "ReLU"
  bottom: "conv2/3x3_reduce"
  top: "conv2/3x3_reduce"
}
layer {
  name: "conv2/3x3"
  type: "Convolution"
  bottom: "conv2/3x3_reduce"
  top: "conv2/3x3"
  param {
    lr_mult: 0.001
  }
  param {
    lr_mult: 0.001
  }
  convolution_param {
    num_output: 192
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "conv2/relu_3x3"
  type: "ReLU"
  bottom: "conv2/3x3"
  top: "conv2/3x3"
}
layer {
  name: "conv2/norm2"
  type: "LRN"
  bottom: "conv2/3x3"
  top: "conv2/norm2"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "pool2/3x3_s2"
  type: "Pooling"
  bottom: "conv2/norm2"
  top: "pool2/3x3_s2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "inception_3a/1x1"
  type: "Convolution"
  bottom: "pool2/3x3_s2"
  top: "inception_3a/1x1"
  param {
    lr_mult: 0.001
  }
  param {
    lr_mult: 0.001
  }
  convolution_param {
    num_output: 64
    kernel_size: 1
  }
}
layer {
  name: "inception_3a/relu_1x1"
  type: "ReLU"
  bottom: "inception_3a/1x1"
  top: "inception_3a/1x1"
}
layer {
  name: "inception_3a/3x3_reduce"
  type: "Convolution"
  bottom: "pool2/3x3_s2"
  top: "inception_3a/3x3_reduce"
  param {
    lr_mult: 0.001
  }
  param {
    lr_mult: 0.001
  }
  convolution_param {
    num_output: 96
    kernel_size: 1
  }
}
layer {
  name: "inception_3a/relu_3x3_reduce"
  type: "ReLU"
  bottom: "inception_3a/3x3_reduce"
  top: "inception_3a/3x3_reduce"
}
layer {
  name: "inception_3a/3x3"
  type: "Convolution"
  bottom: "inception_3a/3x3_reduce"
  top: "inception_3a/3x3"
  param {
    lr_mult: 0.001
  }
  param {
    lr_mult: 0.001
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "inception_3a/relu_3x3"
  type: "ReLU"
  bottom: "inception_3a/3x3"
  top: "inception_3a/3x3"
}
layer {
  name: "inception_3a/5x5_reduce"
  type: "Convolution"
  bottom: "pool2/3x3_s2"
  top: "inception_3a/5x5_reduce"
  param {
    lr_mult: 0.001
  }
  param {
    lr_mult: 0.001
  }
  convolution_param {
    num_output: 16
    kernel_size: 1
  }
}
layer {
  name: "inception_3a/relu_5x5_reduce"
  type: "ReLU"
  bottom: "inception_3a/5x5_reduce"
  top: "inception_3a/5x5_reduce"
}
layer {
  name: "inception_3a/5x5"
  type: "Convolution"
  bottom: "inception_3a/5x5_reduce"
  top: "inception_3a/5x5"
  param {
    lr_mult: 0.001
  }
  param {
    lr_mult: 0.001
  }
  convolution_param {
    num_output: 32
    pad: 2
    kernel_size: 5
  }
}
layer {
  name: "inception_3a/relu_5x5"
  type: "ReLU"
  bottom: "inception_3a/5x5"
  top: "inception_3a/5x5"
}
layer {
  name: "inception_3a/pool"
  type: "Pooling"
  bottom: "pool2/3x3_s2"
  top: "inception_3a/pool"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
layer {
  name: "inception_3a/pool_proj"
  type: "Convolution"
  bottom: "inception_3a/pool"
  top: "inception_3a/pool_proj"
  param {
    lr_mult: 0.001
  }
  param {
    lr_mult: 0.001
  }
  convolution_param {
    num_output: 32
    kernel_size: 1
  }
}
layer {
  name: "inception_3a/relu_pool_proj"
  type: "ReLU"
  bottom: "inception_3a/pool_proj"
  top: "inception_3a/pool_proj"
}
layer {
  name: "inception_3a/output"
  type: "Concat"
  bottom: "inception_3a/1x1"
  bottom: "inception_3a/3x3"
  bottom: "inception_3a/5x5"
  bottom: "inception_3a/pool_proj"
  top: "inception_3a/output"
}
layer {
  name: "inception_3b/1x1"
  type: "Convolution"
  bottom: "inception_3a/output"
  top: "inception_3b/1x1"
  param {
    lr_mult: 0.001
  }
  param {
    lr_mult: 0.001
  }
  convolution_param {
    num_output: 128
    kernel_size: 1
  }
}
layer {
  name: "inception_3b/relu_1x1"
  type: "ReLU"
  bottom: "inception_3b/1x1"
  top: "inception_3b/1x1"
}
layer {
  name: "inception_3b/3x3_reduce"
  type: "Convolution"
  bottom: "inception_3a/output"
  top: "inception_3b/3x3_reduce"
  param {
    lr_mult: 0.001
  }
  param {
    lr_mult: 0.001
  }
  convolution_param {
    num_output: 128
    kernel_size: 1
  }
}
layer {
  name: "inception_3b/relu_3x3_reduce"
  type: "ReLU"
  bottom: "inception_3b/3x3_reduce"
  top: "inception_3b/3x3_reduce"
}
layer {
  name: "inception_3b/3x3"
  type: "Convolution"
  bottom: "inception_3b/3x3_reduce"
  top: "inception_3b/3x3"
  param {
    lr_mult: 0.001
  }
  param {
    lr_mult: 0.001
  }
  convolution_param {
    num_output: 192
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "inception_3b/relu_3x3"
  type: "ReLU"
  bottom: "inception_3b/3x3"
  top: "inception_3b/3x3"
}
layer {
  name: "inception_3b/5x5_reduce"
  type: "Convolution"
  bottom: "inception_3a/output"
  top: "inception_3b/5x5_reduce"
  param {
    lr_mult: 0.001
  }
  param {
    lr_mult: 0.001
  }
  convolution_param {
    num_output: 32
    kernel_size: 1
  }
}
layer {
  name: "inception_3b/relu_5x5_reduce"
  type: "ReLU"
  bottom: "inception_3b/5x5_reduce"
  top: "inception_3b/5x5_reduce"
}
layer {
  name: "inception_3b/5x5"
  type: "Convolution"
  bottom: "inception_3b/5x5_reduce"
  top: "inception_3b/5x5"
  param {
    lr_mult: 0.001
  }
  param {
    lr_mult: 0.001
  }
  convolution_param {
    num_output: 96
    pad: 2
    kernel_size: 5
  }
}
layer {
  name: "inception_3b/relu_5x5"
  type: "ReLU"
  bottom: "inception_3b/5x5"
  top: "inception_3b/5x5"
}
layer {
  name: "inception_3b/pool"
  type: "Pooling"
  bottom: "inception_3a/output"
  top: "inception_3b/pool"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
layer {
  name: "inception_3b/pool_proj"
  type: "Convolution"
  bottom: "inception_3b/pool"
  top: "inception_3b/pool_proj"
  param {
    lr_mult: 0.001
  }
  param {
    lr_mult: 0.001
  }
  convolution_param {
    num_output: 64
    kernel_size: 1
  }
}
layer {
  name: "inception_3b/relu_pool_proj"
  type: "ReLU"
  bottom: "inception_3b/pool_proj"
  top: "inception_3b/pool_proj"
}
layer {
  name: "inception_3b/output"
  type: "Concat"
  bottom: "inception_3b/1x1"
  bottom: "inception_3b/3x3"
  bottom: "inception_3b/5x5"
  bottom: "inception_3b/pool_proj"
  top: "inception_3b/output"
}
layer {
  name: "pool3/3x3_s2"
  type: "Pooling"
  bottom: "inception_3b/output"
  top: "pool3/3x3_s2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "inception_4a/1x1"
  type: "Convolution"
  bottom: "pool3/3x3_s2"
  top: "inception_4a/1x1"
  param {
    lr_mult: 0.001
  }
  param {
    lr_mult: 0.001
  }
  convolution_param {
    num_output: 192
    kernel_size: 1
  }
}
layer {
  name: "inception_4a/relu_1x1"
  type: "ReLU"
  bottom: "inception_4a/1x1"
  top: "inception_4a/1x1"
}
layer {
  name: "inception_4a/3x3_reduce"
  type: "Convolution"
  bottom: "pool3/3x3_s2"
  top: "inception_4a/3x3_reduce"
  param {
    lr_mult: 0.001
  }
  param {
    lr_mult: 0.001
  }
  convolution_param {
    num_output: 96
    kernel_size: 1
  }
}
layer {
  name: "inception_4a/relu_3x3_reduce"
  type: "ReLU"
  bottom: "inception_4a/3x3_reduce"
  top: "inception_4a/3x3_reduce"
}
layer {
  name: "inception_4a/3x3"
  type: "Convolution"
  bottom: "inception_4a/3x3_reduce"
  top: "inception_4a/3x3"
  param {
    lr_mult: 0.001
  }
  param {
    lr_mult: 0.001
  }
  convolution_param {
    num_output: 208
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "inception_4a/relu_3x3"
  type: "ReLU"
  bottom: "inception_4a/3x3"
  top: "inception_4a/3x3"
}
layer {
  name: "inception_4a/5x5_reduce"
  type: "Convolution"
  bottom: "pool3/3x3_s2"
  top: "inception_4a/5x5_reduce"
  param {
    lr_mult: 0.001
  }
  param {
    lr_mult: 0.001
  }
  convolution_param {
    num_output: 16
    kernel_size: 1
  }
}
layer {
  name: "inception_4a/relu_5x5_reduce"
  type: "ReLU"
  bottom: "inception_4a/5x5_reduce"
  top: "inception_4a/5x5_reduce"
}
layer {
  name: "inception_4a/5x5"
  type: "Convolution"
  bottom: "inception_4a/5x5_reduce"
  top: "inception_4a/5x5"
  param {
    lr_mult: 0.001
  }
  param {
    lr_mult: 0.001
  }
  convolution_param {
    num_output: 48
    pad: 2
    kernel_size: 5
  }
}
layer {
  name: "inception_4a/relu_5x5"
  type: "ReLU"
  bottom: "inception_4a/5x5"
  top: "inception_4a/5x5"
}
layer {
  name: "inception_4a/pool"
  type: "Pooling"
  bottom: "pool3/3x3_s2"
  top: "inception_4a/pool"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
layer {
  name: "inception_4a/pool_proj"
  type: "Convolution"
  bottom: "inception_4a/pool"
  top: "inception_4a/pool_proj"
  param {
    lr_mult: 0.001
  }
  param {
    lr_mult: 0.001
  }
  convolution_param {
    num_output: 64
    kernel_size: 1
  }
}
layer {
  name: "inception_4a/relu_pool_proj"
  type: "ReLU"
  bottom: "inception_4a/pool_proj"
  top: "inception_4a/pool_proj"
}
layer {
  name: "inception_4a/output"
  type: "Concat"
  bottom: "inception_4a/1x1"
  bottom: "inception_4a/3x3"
  bottom: "inception_4a/5x5"
  bottom: "inception_4a/pool_proj"
  top: "inception_4a/output"
}
layer {
  name: "loss1/ave_pool"
  type: "Pooling"
  bottom: "inception_4a/output"
  top: "loss1/ave_pool"
  pooling_param {
    pool: AVE
    kernel_size: 5
    stride: 3
  }
}
layer {
  name: "loss1/conv"
  type: "Convolution"
  bottom: "loss1/ave_pool"
  top: "loss1/conv"
  param {
    lr_mult: 0.001
  }
  param {
    lr_mult: 0.001
  }
  convolution_param {
    num_output: 128
    kernel_size: 1
  }
}
layer {
  name: "loss1/relu_conv"
  type: "ReLU"
  bottom: "loss1/conv"
  top: "loss1/conv"
}

layer {
  name: "loss1/fc-conv"
  type: "Convolution"
  bottom: "loss1/conv"
  top: "loss1/fc"
  param {
    lr_mult: 0.001
  }
  param {
    lr_mult: 0.001
  }
  convolution_param {
    num_output: 1024
    pad: 0
    kernel_size: 4
  }
}

layer {
  name: "loss1/relu_fc"
  type: "ReLU"
  bottom: "loss1/fc"
  top: "loss1/fc"
}

layer {
  name: "loss1/classifierb-conv"
  type: "Convolution"
  bottom: "loss1/fc"
  top: "loss1/classifier"
  param {
    lr_mult: 0.001
  }
  param {
    lr_mult: 0.001
  }
  convolution_param {
    num_output: 1000
    pad: 0
    kernel_size: 1
  }
}

layer {
  name: "GAP1"
  type: "Pooling"
  bottom: "loss1/classifier"
  top: "gap1"
  pooling_param {
    pool: MAX
    global_pooling: true
  }
}

layer {
  bottom: "gap1"
  top: "fc1"
  name: "fc1"
  type: "InnerProduct"
  param {
    lr_mult: 0.01
  }
  param {
    lr_mult: 0.01
  }
  inner_product_param {
    num_output: 512
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 1.0
    }
  }
}
layer {
  bottom: "fc1"
  top: "fc1"
  name: "relu"
  type: "ReLU"
}
layer {
  bottom: "fc1"
  top: "fc1"
  name: "drop"
  type: "Dropout"
  dropout_param {
    dropout_ratio: 0.5
  }
}

layer {
#  name: "fc8b"
  name: "Classifier1"
  type: "ClassDistance"
  bottom: "fc1"
  bottom: "label"
  top: "fc1b"
  param {
    lr_mult: 0.01
  }
  param { 
    lr_mult: 0.01
  }
  class_distance_param {
    #num_output: 45
    #num_output: 30
    num_output: 21
    weight_filler { 
      type: "gaussian"
      std: 0.0001 
    }
    update_sigma: false
    isotropic: true
    bias_filler { 
      type: "constant" 
      value: 1.0
    }
    margin_mul {
      policy: STEPUP
      value: 0.00001
      #value: 0.004
      #value: 0.2
      #value: 0.25
      #value: 0.5
      #value: 1.5
      step: 17
      gamma: 2
      max: 0.5
    }
    metric: L2
    center_coef: 0.0001
  }
}

layer {
  name: "loss1/lossb"
  type: "SoftmaxWithLoss"
  bottom: "fc1b"
  bottom: "label"
  top: "loss1/loss1"
  loss_weight: 0.3
}
layer {
  name: "loss1/top-1b"
  type: "Accuracy"
  bottom: "fc1b"
  bottom: "label"
  top: "loss1/top-1"
}

layer {
  name: "inception_4b/1x1"
  type: "Convolution"
  bottom: "inception_4a/output"
  top: "inception_4b/1x1"
  param {
    lr_mult: 0.001
  }
  param {
    lr_mult: 0.001
  }
  convolution_param {
    num_output: 160
    kernel_size: 1
  }
}
layer {
  name: "inception_4b/relu_1x1"
  type: "ReLU"
  bottom: "inception_4b/1x1"
  top: "inception_4b/1x1"
}
layer {
  name: "inception_4b/3x3_reduce"
  type: "Convolution"
  bottom: "inception_4a/output"
  top: "inception_4b/3x3_reduce"
  param {
    lr_mult: 0.001
  }
  param {
    lr_mult: 0.001
  }
  convolution_param {
    num_output: 112
    kernel_size: 1
  }
}
layer {
  name: "inception_4b/relu_3x3_reduce"
  type: "ReLU"
  bottom: "inception_4b/3x3_reduce"
  top: "inception_4b/3x3_reduce"
}
layer {
  name: "inception_4b/3x3"
  type: "Convolution"
  bottom: "inception_4b/3x3_reduce"
  top: "inception_4b/3x3"
  param {
    lr_mult: 0.001
  }
  param {
    lr_mult: 0.001
  }
  convolution_param {
    num_output: 224
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "inception_4b/relu_3x3"
  type: "ReLU"
  bottom: "inception_4b/3x3"
  top: "inception_4b/3x3"
}
layer {
  name: "inception_4b/5x5_reduce"
  type: "Convolution"
  bottom: "inception_4a/output"
  top: "inception_4b/5x5_reduce"
  param {
    lr_mult: 0.001
  }
  param {
    lr_mult: 0.001
  }
  convolution_param {
    num_output: 24
    kernel_size: 1
  }
}
layer {
  name: "inception_4b/relu_5x5_reduce"
  type: "ReLU"
  bottom: "inception_4b/5x5_reduce"
  top: "inception_4b/5x5_reduce"
}
layer {
  name: "inception_4b/5x5"
  type: "Convolution"
  bottom: "inception_4b/5x5_reduce"
  top: "inception_4b/5x5"
  param {
    lr_mult: 0.001
  }
  param {
    lr_mult: 0.001
  }
  convolution_param {
    num_output: 64
    pad: 2
    kernel_size: 5
  }
}
layer {
  name: "inception_4b/relu_5x5"
  type: "ReLU"
  bottom: "inception_4b/5x5"
  top: "inception_4b/5x5"
}
layer {
  name: "inception_4b/pool"
  type: "Pooling"
  bottom: "inception_4a/output"
  top: "inception_4b/pool"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
layer {
  name: "inception_4b/pool_proj"
  type: "Convolution"
  bottom: "inception_4b/pool"
  top: "inception_4b/pool_proj"
  param {
    lr_mult: 0.001
  }
  param {
    lr_mult: 0.001
  }
  convolution_param {
    num_output: 64
    kernel_size: 1
  }
}
layer {
  name: "inception_4b/relu_pool_proj"
  type: "ReLU"
  bottom: "inception_4b/pool_proj"
  top: "inception_4b/pool_proj"
}
layer {
  name: "inception_4b/output"
  type: "Concat"
  bottom: "inception_4b/1x1"
  bottom: "inception_4b/3x3"
  bottom: "inception_4b/5x5"
  bottom: "inception_4b/pool_proj"
  top: "inception_4b/output"
}
layer {
  name: "inception_4c/1x1"
  type: "Convolution"
  bottom: "inception_4b/output"
  top: "inception_4c/1x1"
  param {
    lr_mult: 0.001
  }
  param {
    lr_mult: 0.001
  }
  convolution_param {
    num_output: 128
    kernel_size: 1
  }
}
layer {
  name: "inception_4c/relu_1x1"
  type: "ReLU"
  bottom: "inception_4c/1x1"
  top: "inception_4c/1x1"
}
layer {
  name: "inception_4c/3x3_reduce"
  type: "Convolution"
  bottom: "inception_4b/output"
  top: "inception_4c/3x3_reduce"
  param {
    lr_mult: 0.001
  }
  param {
    lr_mult: 0.001
  }
  convolution_param {
    num_output: 128
    kernel_size: 1
  }
}
layer {
  name: "inception_4c/relu_3x3_reduce"
  type: "ReLU"
  bottom: "inception_4c/3x3_reduce"
  top: "inception_4c/3x3_reduce"
}
layer {
  name: "inception_4c/3x3"
  type: "Convolution"
  bottom: "inception_4c/3x3_reduce"
  top: "inception_4c/3x3"
  param {
    lr_mult: 0.001
  }
  param {
    lr_mult: 0.001
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "inception_4c/relu_3x3"
  type: "ReLU"
  bottom: "inception_4c/3x3"
  top: "inception_4c/3x3"
}
layer {
  name: "inception_4c/5x5_reduce"
  type: "Convolution"
  bottom: "inception_4b/output"
  top: "inception_4c/5x5_reduce"
  param {
    lr_mult: 0.001
  }
  param {
    lr_mult: 0.001
  }
  convolution_param {
    num_output: 24
    kernel_size: 1
  }
}
layer {
  name: "inception_4c/relu_5x5_reduce"
  type: "ReLU"
  bottom: "inception_4c/5x5_reduce"
  top: "inception_4c/5x5_reduce"
}
layer {
  name: "inception_4c/5x5"
  type: "Convolution"
  bottom: "inception_4c/5x5_reduce"
  top: "inception_4c/5x5"
  param {
    lr_mult: 0.001
  }
  param {
    lr_mult: 0.001
  }
  convolution_param {
    num_output: 64
    pad: 2
    kernel_size: 5
  }
}
layer {
  name: "inception_4c/relu_5x5"
  type: "ReLU"
  bottom: "inception_4c/5x5"
  top: "inception_4c/5x5"
}
layer {
  name: "inception_4c/pool"
  type: "Pooling"
  bottom: "inception_4b/output"
  top: "inception_4c/pool"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
layer {
  name: "inception_4c/pool_proj"
  type: "Convolution"
  bottom: "inception_4c/pool"
  top: "inception_4c/pool_proj"
  param {
    lr_mult: 0.001
  }
  param {
    lr_mult: 0.001
  }
  convolution_param {
    num_output: 64
    kernel_size: 1
  }
}
layer {
  name: "inception_4c/relu_pool_proj"
  type: "ReLU"
  bottom: "inception_4c/pool_proj"
  top: "inception_4c/pool_proj"
}
layer {
  name: "inception_4c/output"
  type: "Concat"
  bottom: "inception_4c/1x1"
  bottom: "inception_4c/3x3"
  bottom: "inception_4c/5x5"
  bottom: "inception_4c/pool_proj"
  top: "inception_4c/output"
}
layer {
  name: "inception_4d/1x1"
  type: "Convolution"
  bottom: "inception_4c/output"
  top: "inception_4d/1x1"
  param {
    lr_mult: 0.001
  }
  param {
    lr_mult: 0.001
  }
  convolution_param {
    num_output: 112
    kernel_size: 1
  }
}
layer {
  name: "inception_4d/relu_1x1"
  type: "ReLU"
  bottom: "inception_4d/1x1"
  top: "inception_4d/1x1"
}
layer {
  name: "inception_4d/3x3_reduce"
  type: "Convolution"
  bottom: "inception_4c/output"
  top: "inception_4d/3x3_reduce"
  param {
    lr_mult: 0.001
  }
  param {
    lr_mult: 0.001
  }
  convolution_param {
    num_output: 144
    kernel_size: 1
  }
}
layer {
  name: "inception_4d/relu_3x3_reduce"
  type: "ReLU"
  bottom: "inception_4d/3x3_reduce"
  top: "inception_4d/3x3_reduce"
}
layer {
  name: "inception_4d/3x3"
  type: "Convolution"
  bottom: "inception_4d/3x3_reduce"
  top: "inception_4d/3x3"
  param {
    lr_mult: 0.001
  }
  param {
    lr_mult: 0.001
  }
  convolution_param {
    num_output: 288
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "inception_4d/relu_3x3"
  type: "ReLU"
  bottom: "inception_4d/3x3"
  top: "inception_4d/3x3"
}
layer {
  name: "inception_4d/5x5_reduce"
  type: "Convolution"
  bottom: "inception_4c/output"
  top: "inception_4d/5x5_reduce"
  param {
    lr_mult: 0.001
  }
  param {
    lr_mult: 0.001
  }
  convolution_param {
    num_output: 32
    kernel_size: 1
  }
}
layer {
  name: "inception_4d/relu_5x5_reduce"
  type: "ReLU"
  bottom: "inception_4d/5x5_reduce"
  top: "inception_4d/5x5_reduce"
}
layer {
  name: "inception_4d/5x5"
  type: "Convolution"
  bottom: "inception_4d/5x5_reduce"
  top: "inception_4d/5x5"
  param {
    lr_mult: 0.001
  }
  param {
    lr_mult: 0.001
  }
  convolution_param {
    num_output: 64
    pad: 2
    kernel_size: 5
  }
}
layer {
  name: "inception_4d/relu_5x5"
  type: "ReLU"
  bottom: "inception_4d/5x5"
  top: "inception_4d/5x5"
}
layer {
  name: "inception_4d/pool"
  type: "Pooling"
  bottom: "inception_4c/output"
  top: "inception_4d/pool"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
layer {
  name: "inception_4d/pool_proj"
  type: "Convolution"
  bottom: "inception_4d/pool"
  top: "inception_4d/pool_proj"
  param {
    lr_mult: 0.001
  }
  param {
    lr_mult: 0.001
  }
  convolution_param {
    num_output: 64
    kernel_size: 1
  }
}
layer {
  name: "inception_4d/relu_pool_proj"
  type: "ReLU"
  bottom: "inception_4d/pool_proj"
  top: "inception_4d/pool_proj"
}
layer {
  name: "inception_4d/output"
  type: "Concat"
  bottom: "inception_4d/1x1"
  bottom: "inception_4d/3x3"
  bottom: "inception_4d/5x5"
  bottom: "inception_4d/pool_proj"
  top: "inception_4d/output"
}
layer {
  name: "loss2/ave_pool"
  type: "Pooling"
  bottom: "inception_4d/output"
  top: "loss2/ave_pool"
  pooling_param {
    pool: AVE
    kernel_size: 5
    stride: 3
  }
}
layer {
  name: "loss2/conv"
  type: "Convolution"
  bottom: "loss2/ave_pool"
  top: "loss2/conv"
  param {
    lr_mult: 0.001
  }
  param {
    lr_mult: 0.001
  }
  convolution_param {
    num_output: 128
    kernel_size: 1
  }
}
layer {
  name: "loss2/relu_conv"
  type: "ReLU"
  bottom: "loss2/conv"
  top: "loss2/conv"
}

layer {
  name: "loss2/fc-conv"
  type: "Convolution"
  bottom: "loss2/conv"
  top: "loss2/fc"
  param {
    lr_mult: 0.001
  }
  param {
    lr_mult: 0.001
  }
  convolution_param {
    num_output: 1024
    pad: 0
    kernel_size: 4
  }
}

layer {
  name: "loss2/relu_fc"
  type: "ReLU"
  bottom: "loss2/fc"
  top: "loss2/fc"
}

layer {
  name: "loss2/classifierc-conv"
  type: "Convolution"
  bottom: "loss2/fc"
  top: "loss2/classifier"
  param {
    lr_mult: 0.001
  }
  param {
    lr_mult: 0.001
  }
  convolution_param {
    num_output: 1000
    pad: 0
    kernel_size: 1
  }
}

layer {
  name: "GAP2"
  type: "Pooling"
  bottom: "loss2/classifier"
  top: "gap2"
  pooling_param {
    pool: MAX
    global_pooling: true
  }
}

layer {
  bottom: "gap2"
  top: "fc2"
  name: "fc2"
  type: "InnerProduct"
  param {
    lr_mult: 0.01
  }
  param {
    lr_mult: 0.01
  }
  inner_product_param {
    num_output: 512
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 1.0
    }
  }
}
layer {
  bottom: "fc2"
  top: "fc2"
  name: "relu"
  type: "ReLU"
}
layer {
  bottom: "fc2"
  top: "fc2"
  name: "drop"
  type: "Dropout"
  dropout_param {
    dropout_ratio: 0.5
  }
}

layer {
#  name: "fc8b"
  name: "Classifier2"
  type: "ClassDistance"
  bottom: "fc2"
  bottom: "label"
  top: "fc5b"
  param {
    lr_mult: 0.01
  }
  param { 
    lr_mult: 0.01
  }
  class_distance_param {
    #num_output: 45
    #num_output: 30
    num_output: 21
    weight_filler { 
      type: "gaussian"
      std: 0.0001 
    }
    update_sigma: false
    isotropic: true
    bias_filler { 
      type: "constant" 
      value: 1.0
    }
    margin_mul {
      policy: STEPUP
      value: 0.00001
      #value: 0.004
      #value: 0.2
      #value: 0.25
      #value: 0.5
      #value: 1.5
      step: 17
      gamma: 2
      max: 0.5
    }
    metric: L2
    center_coef: 0.0001
  }
}

layer {
  name: "loss2/lossc"
  type: "SoftmaxWithLoss"
  bottom: "fc5b"
  bottom: "label"
  top: "loss2/loss1"
  loss_weight: 0.3
}
layer {
  name: "loss2/top-1c"
  type: "Accuracy"
  bottom: "fc5b"
  bottom: "label"
  top: "loss2/top-1"
}

layer {
  name: "inception_4e/1x1"
  type: "Convolution"
  bottom: "inception_4d/output"
  top: "inception_4e/1x1"
  param {
    lr_mult: 0.001
  }
  param {
    lr_mult: 0.001
  }
  convolution_param {
    num_output: 256
    kernel_size: 1
  }
}
layer {
  name: "inception_4e/relu_1x1"
  type: "ReLU"
  bottom: "inception_4e/1x1"
  top: "inception_4e/1x1"
}
layer {
  name: "inception_4e/3x3_reduce"
  type: "Convolution"
  bottom: "inception_4d/output"
  top: "inception_4e/3x3_reduce"
  param {
    lr_mult: 0.001
  }
  param {
    lr_mult: 0.001
  }
  convolution_param {
    num_output: 160
    kernel_size: 1
  }
}
layer {
  name: "inception_4e/relu_3x3_reduce"
  type: "ReLU"
  bottom: "inception_4e/3x3_reduce"
  top: "inception_4e/3x3_reduce"
}
layer {
  name: "inception_4e/3x3"
  type: "Convolution"
  bottom: "inception_4e/3x3_reduce"
  top: "inception_4e/3x3"
  param {
    lr_mult: 0.001
  }
  param {
    lr_mult: 0.001
  }
  convolution_param {
    num_output: 320
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "inception_4e/relu_3x3"
  type: "ReLU"
  bottom: "inception_4e/3x3"
  top: "inception_4e/3x3"
}
layer {
  name: "inception_4e/5x5_reduce"
  type: "Convolution"
  bottom: "inception_4d/output"
  top: "inception_4e/5x5_reduce"
  param {
    lr_mult: 0.001
  }
  param {
    lr_mult: 0.001
  }
  convolution_param {
    num_output: 32
    kernel_size: 1
  }
}
layer {
  name: "inception_4e/relu_5x5_reduce"
  type: "ReLU"
  bottom: "inception_4e/5x5_reduce"
  top: "inception_4e/5x5_reduce"
}
layer {
  name: "inception_4e/5x5"
  type: "Convolution"
  bottom: "inception_4e/5x5_reduce"
  top: "inception_4e/5x5"
  param {
    lr_mult: 0.001
  }
  param {
    lr_mult: 0.001
  }
  convolution_param {
    num_output: 128
    pad: 2
    kernel_size: 5
  }
}
layer {
  name: "inception_4e/relu_5x5"
  type: "ReLU"
  bottom: "inception_4e/5x5"
  top: "inception_4e/5x5"
}
layer {
  name: "inception_4e/pool"
  type: "Pooling"
  bottom: "inception_4d/output"
  top: "inception_4e/pool"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
layer {
  name: "inception_4e/pool_proj"
  type: "Convolution"
  bottom: "inception_4e/pool"
  top: "inception_4e/pool_proj"
  param {
    lr_mult: 0.001
  }
  param {
    lr_mult: 0.001
  }
  convolution_param {
    num_output: 128
    kernel_size: 1
  }
}
layer {
  name: "inception_4e/relu_pool_proj"
  type: "ReLU"
  bottom: "inception_4e/pool_proj"
  top: "inception_4e/pool_proj"
}
layer {
  name: "inception_4e/output"
  type: "Concat"
  bottom: "inception_4e/1x1"
  bottom: "inception_4e/3x3"
  bottom: "inception_4e/5x5"
  bottom: "inception_4e/pool_proj"
  top: "inception_4e/output"
}
layer {
  name: "pool4/3x3_s2"
  type: "Pooling"
  bottom: "inception_4e/output"
  top: "pool4/3x3_s2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "inception_5a/1x1"
  type: "Convolution"
  bottom: "pool4/3x3_s2"
  top: "inception_5a/1x1"
  param {
    lr_mult: 0.001
  }
  param {
    lr_mult: 0.001
  }
  convolution_param {
    num_output: 256
    kernel_size: 1
  }
}
layer {
  name: "inception_5a/relu_1x1"
  type: "ReLU"
  bottom: "inception_5a/1x1"
  top: "inception_5a/1x1"
}
layer {
  name: "inception_5a/3x3_reduce"
  type: "Convolution"
  bottom: "pool4/3x3_s2"
  top: "inception_5a/3x3_reduce"
  param {
    lr_mult: 0.001
  }
  param {
    lr_mult: 0.001
  }
  convolution_param {
    num_output: 160
    kernel_size: 1
  }
}
layer {
  name: "inception_5a/relu_3x3_reduce"
  type: "ReLU"
  bottom: "inception_5a/3x3_reduce"
  top: "inception_5a/3x3_reduce"
}
layer {
  name: "inception_5a/3x3"
  type: "Convolution"
  bottom: "inception_5a/3x3_reduce"
  top: "inception_5a/3x3"
  param {
    lr_mult: 0.001
  }
  param {
    lr_mult: 0.001
  }
  convolution_param {
    num_output: 320
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "inception_5a/relu_3x3"
  type: "ReLU"
  bottom: "inception_5a/3x3"
  top: "inception_5a/3x3"
}
layer {
  name: "inception_5a/5x5_reduce"
  type: "Convolution"
  bottom: "pool4/3x3_s2"
  top: "inception_5a/5x5_reduce"
  param {
    lr_mult: 0.001
  }
  param {
    lr_mult: 0.001
  }
  convolution_param {
    num_output: 32
    kernel_size: 1
  }
}
layer {
  name: "inception_5a/relu_5x5_reduce"
  type: "ReLU"
  bottom: "inception_5a/5x5_reduce"
  top: "inception_5a/5x5_reduce"
}
layer {
  name: "inception_5a/5x5"
  type: "Convolution"
  bottom: "inception_5a/5x5_reduce"
  top: "inception_5a/5x5"
  param {
    lr_mult: 0.001
  }
  param {
    lr_mult: 0.001
  }
  convolution_param {
    num_output: 128
    pad: 2
    kernel_size: 5
  }
}
layer {
  name: "inception_5a/relu_5x5"
  type: "ReLU"
  bottom: "inception_5a/5x5"
  top: "inception_5a/5x5"
}
layer {
  name: "inception_5a/pool"
  type: "Pooling"
  bottom: "pool4/3x3_s2"
  top: "inception_5a/pool"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
layer {
  name: "inception_5a/pool_proj"
  type: "Convolution"
  bottom: "inception_5a/pool"
  top: "inception_5a/pool_proj"
  param {
    lr_mult: 0.001
  }
  param {
    lr_mult: 0.001
  }
  convolution_param {
    num_output: 128
    kernel_size: 1
  }
}
layer {
  name: "inception_5a/relu_pool_proj"
  type: "ReLU"
  bottom: "inception_5a/pool_proj"
  top: "inception_5a/pool_proj"
}
layer {
  name: "inception_5a/output"
  type: "Concat"
  bottom: "inception_5a/1x1"
  bottom: "inception_5a/3x3"
  bottom: "inception_5a/5x5"
  bottom: "inception_5a/pool_proj"
  top: "inception_5a/output"
}
layer {
  name: "inception_5b/1x1"
  type: "Convolution"
  bottom: "inception_5a/output"
  top: "inception_5b/1x1"
  param {
    lr_mult: 0.001
  }
  param {
    lr_mult: 0.001
  }
  convolution_param {
    num_output: 384
    kernel_size: 1
  }
}
layer {
  name: "inception_5b/relu_1x1"
  type: "ReLU"
  bottom: "inception_5b/1x1"
  top: "inception_5b/1x1"
}
layer {
  name: "inception_5b/3x3_reduce"
  type: "Convolution"
  bottom: "inception_5a/output"
  top: "inception_5b/3x3_reduce"
  param {
    lr_mult: 0.001
  }
  param {
    lr_mult: 0.001
  }
  convolution_param {
    num_output: 192
    kernel_size: 1
  }
}
layer {
  name: "inception_5b/relu_3x3_reduce"
  type: "ReLU"
  bottom: "inception_5b/3x3_reduce"
  top: "inception_5b/3x3_reduce"
}
layer {
  name: "inception_5b/3x3"
  type: "Convolution"
  bottom: "inception_5b/3x3_reduce"
  top: "inception_5b/3x3"
  param {
    lr_mult: 0.001
  }
  param {
    lr_mult: 0.001
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "inception_5b/relu_3x3"
  type: "ReLU"
  bottom: "inception_5b/3x3"
  top: "inception_5b/3x3"
}
layer {
  name: "inception_5b/5x5_reduce"
  type: "Convolution"
  bottom: "inception_5a/output"
  top: "inception_5b/5x5_reduce"
  param {
    lr_mult: 0.001
  }
  param {
    lr_mult: 0.001
  }
  convolution_param {
    num_output: 48
    kernel_size: 1
  }
}
layer {
  name: "inception_5b/relu_5x5_reduce"
  type: "ReLU"
  bottom: "inception_5b/5x5_reduce"
  top: "inception_5b/5x5_reduce"
}
layer {
  name: "inception_5b/5x5"
  type: "Convolution"
  bottom: "inception_5b/5x5_reduce"
  top: "inception_5b/5x5"
  param {
    lr_mult: 0.001
  }
  param {
    lr_mult: 0.001
  }
  convolution_param {
    num_output: 128
    pad: 2
    kernel_size: 5
  }
}
layer {
  name: "inception_5b/relu_5x5"
  type: "ReLU"
  bottom: "inception_5b/5x5"
  top: "inception_5b/5x5"
}
layer {
  name: "inception_5b/pool"
  type: "Pooling"
  bottom: "inception_5a/output"
  top: "inception_5b/pool"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
layer {
  name: "inception_5b/pool_proj"
  type: "Convolution"
  bottom: "inception_5b/pool"
  top: "inception_5b/pool_proj"
  param {
    lr_mult: 0.001
  }
  param {
    lr_mult: 0.001
  }
  convolution_param {
    num_output: 128
    kernel_size: 1
  }
}
layer {
  name: "inception_5b/relu_pool_proj"
  type: "ReLU"
  bottom: "inception_5b/pool_proj"
  top: "inception_5b/pool_proj"
}
layer {
  name: "inception_5b/output"
  type: "Concat"
  bottom: "inception_5b/1x1"
  bottom: "inception_5b/3x3"
  bottom: "inception_5b/5x5"
  bottom: "inception_5b/pool_proj"
  top: "inception_5b/output"
}
layer {
  name: "pool5/7x7_s1"
  type: "Pooling"
  bottom: "inception_5b/output"
  top: "pool5/7x7_s1"
  pooling_param {
    pool: AVE
    kernel_size: 7
    stride: 1
  }
}

layer {
  name: "loss3/classifierd-conv"
  type: "Convolution"
  bottom: "pool5/7x7_s1"
  top: "loss3/classifier"
  param {
    lr_mult: 0.001
  }
  param {
    lr_mult: 0.001
  }
  convolution_param {
    num_output: 1000
    pad: 0
    kernel_size: 1
  }
}

layer {
  name: "GAP3"
  type: "Pooling"
  bottom: "loss3/classifier"
  top: "gap3"
  pooling_param {
    pool: MAX
    global_pooling: true
  }
}

layer {
  bottom: "gap3"
  top: "fc3"
  name: "fc3"
  type: "InnerProduct"
  param {
    lr_mult: 0.01
  }
  param {
    lr_mult: 0.01
  }
  inner_product_param {
    num_output: 512
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 1.0
    }
  }
}
layer {
  bottom: "fc3"
  top: "fc3"
  name: "relu"
  type: "ReLU"
}
layer {
  bottom: "fc3"
  top: "fc3"
  name: "drop"
  type: "Dropout"
  dropout_param {
    dropout_ratio: 0.5
  }
}

layer {
#  name: "fc8b"
  name: "Classifier"
  type: "ClassDistance"
  bottom: "fc3"
  bottom: "label"
  top: "fc8b"
  param {
    lr_mult: 0.01
  }
  param { 
    lr_mult: 0.01
  }
  class_distance_param {
    #num_output: 45
    #num_output: 30
    num_output: 21
    weight_filler { 
      type: "gaussian"
      std: 0.0001 
    }
    update_sigma: false
    isotropic: true
    bias_filler { 
      type: "constant" 
      value: 1.0
    }
    margin_mul {
      policy: STEPUP
      value: 0.00001
      step: 17 #step*batchsize=epoch
      gamma: 2
      max: 0.5
    }
    metric: L2
    center_coef: 0.0001
  }
}

layer {
  name: "loss3/loss3d"
  type: "SoftmaxWithLoss"
  bottom: "fc8b"
  bottom: "label"
  top: "loss3/loss3"
  loss_weight: 1
}
layer {
  name: "loss3/top-1d"
  type: "Accuracy"
  bottom: "fc8b"
  bottom: "label"
  top: "loss3/top-1"
}

